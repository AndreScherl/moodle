VideoEasy Filter
=========================================
VideoEasy is a filter that replaces links to video files, with flash or html5 video players. The Video Easy filter uses templates to support multiple video players, and allows the user to add new players or customize existing ones, all from the Video Easy filter settings page. By default players are already defined for:
Video.js, Sublime Video, JW Player, Flowplayer and MediaElement.js

Installation
=========================================
If you are uploading videoeasy, first expand the zip file and upload the videoeasy folder into:
[PATH TO MOODLE]/filters.

Then visit your Moodle server's Site Administration -> Notifications page. Moodle will guide you through the installation. On the final page of the installation you will be able to register templates. You can choose to skip that and do it later from the videoeasy settings page if you wish.

After installing you will need to enable the videoeasy filter. You can enable the videoeasy filter when you visit:
Site Administration / plugins / filters / manage filters

Configuration
=========================================
Configure the settings  and define/edit templates at 
Site Administration / plugins / filters / Video Easy

You need to check the filetypes you wish the Video Easy filter to handle at the top of the settings page. You can choose any or all of mp4 / webm or ogg.

You should also check which of the players you wish to enable from the drop down list.
NB You should TURN OFF file handling for any extensions you select here in the Moodle Multi Media Plugins filter, and the PoodLL filter if installed.
Multi Media Plugins filter settings can be found at:
Site Administration / appearance / media embedding

PoodLL filter settings can be found at:
Site Administration / plugins / filters / PoodLL

Templates
=========================================
There are ten templates and the first five are ready made, though they can be altered.They are: Video.js, Sublime Video, JW Player, Flowplayer and MediaElement.js

SublimeVideo and JW Player require you register with their site to get a personal javascript link. So you will need to do that first then enter it in the template before you can use them.

Each template has :
1) javascript url : The url of the JS file the html5 player requires (probably always)
2) css url : The url of the CSS file the html5 player requires (if any)
3) requires jquery : True or False
4) template : The html that goes on the page. Often this is just a div , with a unique id. Sometimes it is html5 video tags.
5) load script : Any script which the player runs to load an individual player, usually with the unique id of a container div
6) defaults : Custom variables you may use in the template or load script, or default values for existing variables (ie width and height).

Variables are used to replace placeholders in the template and load scripts. A placeholder for a variable looks like this: @@VARIABLE@@ (variable name surrounded by @@ marks.)

The Video Easy Variables
======================================
These variables are generated by Video Easy after parsing the media link on the Moodle page. You can define your own in the defaults section if you wish. 
NB Video Easy supports the ?d=[width]x[height] notation that Moodle's multi media plugins filter uses. But since almost nobody ever uses it, in most cases you will want to specify a width and height in the defaults section for the template. 

AUTOMIME = video file mime type determined by file extension.
FILENAME = filename of video
AUTOPNGFILENAME = the video filename but with a png extension
AUTOJPGFILENAME = the video filename but with a jpg extension
VIDEOURL = the url of the video
AUTOPOSTERURLJPG = the full video url but with a jpg extension
AUTOPOSTERURLPNG = the full video url but with a png extension
DEFAULTPOSTERURL = url to a default poster image of static
TITLE = the video title (from linked text)
AUTOID = an auto generated id to use in the container div or elsewhere
CSSLINK = used internally to load a CSS file if needed.
PLAYER = the type of player (videojs, flowplayer ...etc)
WIDTH = the width of video
HEIGHT = the height of video

Note that while the template replacement is a simple swap out of the placeholder text, the loader script replacement is a little different. The loader script replacement will remove surrounding quotes as well as the placeholder, and put a JS variable in their place.
 eg
 template: <video id="@@AUTOID@@" 
 becomes: <video id="123456"
 
 loader script: player{ id: "@@AUTOID@@"
 becomes: player{ id: opts['AUTOID']
 
And a final caution, Video Easy generates a loader script from the template (if required) but this will be cached by Moodle in most cases. Thats a good thing too. But it means you will need to run Moodle "purge all caches" after making changes to anything on the Video Easy filter settings page.

Enjoy

Justin Hunt
poodllsupport@gmail.com





